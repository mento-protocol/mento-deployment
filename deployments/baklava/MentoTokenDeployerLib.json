{
  "address": "0x72151DBf419838180841DEF313fa2D6D54d32445",
  "abi": [],
  "transactionHash": "0x3f16dab95695ba55c46da77f2c9cfc1fcc063a51bd9961d40508d3cd08219ab1",
  "receipt": {
    "to": null,
    "from": "0x56fD3F2bEE130e9867942D0F463a16fBE49B8d81",
    "contractAddress": "0x72151DBf419838180841DEF313fa2D6D54d32445",
    "transactionIndex": 0,
    "gasUsed": "1179858",
    "logsBloom": "0x
    "blockHash": "0xd218d9db0a084c136065c7d976f4cd7b198ff1d5fef6e4223ea058fbc4b60964",
    "transactionHash": "0x3f16dab95695ba55c46da77f2c9cfc1fcc063a51bd9961d40508d3cd08219ab1",
    "logs": [],
    "blockNumber": 21449342,
    "cumulativeGasUsed": "1179858",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "7e83205a170b12fd7688a59ae658f360",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy(address,address,address,address,address)\":{\"params\":{\"airgrab\":\"The address of the airgrab contract\",\"emission\":\"The address of the emission contract\",\"governanceTimelock\":\"The address of the governance timelock\",\"mentoLabsMultiSig\":\"The address of the Mento Labs multisig\",\"mentoLabsTreasuryTimelock\":\"The address of the timelocked Mento Labs Treasury\"},\"returns\":{\"_0\":\"The address of the new MentoToken contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(address,address,address,address,address)\":{\"notice\":\"Deploys a new MentoToken contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/mento-core-gov/contracts/governance/deployers/MentoTokenDeployerLib.sol\":\"MentoTokenDeployerLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"lib/mento-core-gov/contracts/governance/MentoToken.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.18;\\n\\nimport { ERC20Burnable, ERC20 } from \\\"openzeppelin-contracts-next/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\n\\n/**\\n * @title Mento Token\\n * @author Mento Labs\\n * @notice This contract represents the Mento Protocol Token which is a Burnable ERC20 token.\\n */\\ncontract MentoToken is ERC20Burnable {\\n  /// @notice The address of the emission contract that has the capability to emit new tokens.\\n  address public immutable emission;\\n\\n  /// @notice The total amount of tokens that can be minted by the emission contract.\\n  uint256 public immutable emissionSupply;\\n\\n  /// @notice The total amount of tokens that have been minted by the emission contract so far.\\n  uint256 public emittedAmount;\\n\\n  // solhint-disable max-line-length\\n  /**\\n   * @dev Constructor for the MentoToken contract.\\n   * @notice It mints and allocates the initial token supply among several contracts.\\n   * @param mentoLabsMultiSig The address of the Mento Labs MultiSig where 8% of the total supply will be sent for vesting.\\n   * @param mentoLabsTreasuryTimelock The address of the timelocked Mento Labs treasury where 12% of the total supply will be sent.\\n   * @param airgrab The address of the airgrab contract where 5% of the total supply will be sent.\\n   * @param governanceTimelock The address of the treasury contract where 10% of the total supply will be sent.\\n   * @param emission_ The address of the emission contract where the rest of the supply will be emitted.\\n   */\\n  // solhint-enable max-line-length\\n  constructor(\\n    address mentoLabsMultiSig,\\n    address mentoLabsTreasuryTimelock,\\n    address airgrab,\\n    address governanceTimelock,\\n    address emission_\\n  ) ERC20(\\\"Mento Token\\\", \\\"MENTO\\\") {\\n    uint256 supply = 1_000_000_000 * 10**decimals();\\n\\n    uint256 mentoLabsMultiSigSupply = (supply * 8) / 100;\\n    uint256 mentoLabsTreasurySupply = (supply * 12) / 100;\\n    uint256 airgrabSupply = (supply * 5) / 100;\\n    uint256 governanceTimelockSupply = (supply * 10) / 100;\\n    uint256 emissionSupply_ = (supply * 65) / 100;\\n\\n    _mint(mentoLabsMultiSig, mentoLabsMultiSigSupply);\\n    _mint(mentoLabsTreasuryTimelock, mentoLabsTreasurySupply);\\n    _mint(airgrab, airgrabSupply);\\n    _mint(governanceTimelock, governanceTimelockSupply);\\n\\n    emission = emission_;\\n    emissionSupply = emissionSupply_;\\n  }\\n\\n  /**\\n   * @dev Allows the emission contract to mint new tokens up to the emission supply limit.\\n   * @notice This function can only be called by the emission contract and\\n   * only if the total emitted amount hasn't exceeded the emission supply.\\n   * @param target Address to which the newly minted tokens will be sent.\\n   * @param amount Amount of tokens to be minted.\\n   */\\n  function mint(address target, uint256 amount) external {\\n    require(msg.sender == emission, \\\"MentoToken: only emission contract\\\");\\n    require(emittedAmount + amount <= emissionSupply, \\\"MentoToken: emission supply exceeded\\\");\\n\\n    emittedAmount += amount;\\n    _mint(target, amount);\\n  }\\n}\\n\",\"keccak256\":\"0xd5d1e9485e4b4ad8fc4ce28dadb3dda8be5ca34dcc4e157c89042cdbc3907709\",\"license\":\"GPL-3.0-or-later\"},\"lib/mento-core-gov/contracts/governance/deployers/MentoTokenDeployerLib.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.8.18;\\n// solhint-disable max-line-length\\n\\nimport { MentoToken } from \\\"../MentoToken.sol\\\";\\n\\nlibrary MentoTokenDeployerLib {\\n  /**\\n   * @notice Deploys a new MentoToken contract\\n   * @param mentoLabsMultiSig The address of the Mento Labs multisig\\n   * @param mentoLabsTreasuryTimelock The address of the timelocked Mento Labs Treasury\\n   * @param airgrab The address of the airgrab contract\\n   * @param governanceTimelock The address of the governance timelock\\n   * @param emission The address of the emission contract\\n   * @return The address of the new MentoToken contract\\n   */\\n  function deploy(\\n    address mentoLabsMultiSig,\\n    address mentoLabsTreasuryTimelock,\\n    address airgrab,\\n    address governanceTimelock,\\n    address emission\\n  ) external returns (MentoToken) {\\n    return new MentoToken(mentoLabsMultiSig, mentoLabsTreasuryTimelock, airgrab, governanceTimelock, emission);\\n  }\\n}\\n\",\"keccak256\":\"0xfa3e7895306fd53ef8a87d32b0df8afc71fee8302ae1d30638c16998d0d7ae88\",\"license\":\"GPL-3.0-or-later\"},\"openzeppelin-contracts-next/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"openzeppelin-contracts-next/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"openzeppelin-contracts-next/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC20.sol\\\";\\nimport \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys `amount` tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 amount) public virtual {\\n        _burn(_msgSender(), amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\\n     * allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `amount`.\\n     */\\n    function burnFrom(address account, uint256 amount) public virtual {\\n        _spendAllowance(account, _msgSender(), amount);\\n        _burn(account, amount);\\n    }\\n}\\n\",\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\"},\"openzeppelin-contracts-next/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"openzeppelin-contracts-next/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461001c5761146c908161002282393081602d0152f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c639937a6781461002a57600080fd5b307f0000000000000000000000000000000000000000000000000000000000000000146101365760a0366003190112610136576001600160a01b0390600435828116908190036101325760243583811680910361012e5760443584811680910361012a57606435908582168092036101265760843592868416809403610122576112fc948587019587871067ffffffffffffffff88111761010e57918795939160a097959361013b88398552602085015260408401526060830152608082015203019083f0908115610103576020925060405191168152f35b6040513d84823e3d90fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b8680fd5b8580fd5b8480fd5b8380fd5b5080fdfe60c034620005e4576001600160401b0390601f620012fc38819003828101601f1916840193929185851184861017620004e0578160a09285926040978852833981010312620005e457620000538262000609565b6020906200006382850162000609565b906200007186860162000609565b946200008e6080620000866060840162000609565b920162000609565b9562000099620005e9565b600b81526a26b2b73a37902a37b5b2b760a91b86820152620000ba620005e9565b9960058b52644d454e544f60d81b878c01528151818111620004e0576003546001938482811c92168015620005d9575b8a831014620005c357818b8493116200056c575b5089908b83116001146200050257600092620004f6575b505081841b916000199060031b1c1916176003555b8a51908111620004e05760049a8b548381811c91168015620004d5575b89821014620004c05789811162000475575b5087908983116001146200040d5792829391839260009462000401575b50501b916000199060031b1c19161789555b6001600160a01b03928316938415620003d15760029485546a422ca8b0a00a4250000000908181018091116200038c5791600087969594928998948b9a55828252818a528d82208181540190558d519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9a8b91a3168015620003a15784546a6342fd08f00f6378000000908181018091116200038c578888879594938e6000948b5585855284835280852082815401905551908152a31680156200035c5783546a295be96e6406697200000090818101809111620003475786600092899288558484528382528c84208181540190558c51908152a31693841562000317575080546a52b7d2dcc80cd2e400000091828201809211620003025760009596979850558484528382528684208181540190558651908152a36080526b0219aada9b14535aca00000060a05251610cbd90816200061f82396080518181816103370152610419015260a05181818161044f01526105d00152f35b601189634e487b7160e01b6000525260246000fd5b876064918489519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b60118c634e487b7160e01b6000525260246000fd5b60648a88878c519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b60118d634e487b7160e01b6000525260246000fd5b60648b89888d519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b60648a88888c519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b01519250388062000176565b90601f198316918d600052838a6000209360005b8c888383106200045d575050501062000443575b505050811b01895562000188565b015160001960f88460031b161c1916905538808062000435565b86860151885590960195948501948793500162000421565b8c600052886000208a80850160051c8201928b8610620004b6575b0160051c019084905b828110620004a957505062000159565b6000815501849062000499565b9250819262000490565b60228d634e487b7160e01b6000525260246000fd5b90607f169062000147565b634e487b7160e01b600052604160045260246000fd5b01519050388062000115565b90859350601f1983169160036000528b6000209260005b8d8282106200055557505084116200053b575b505050811b016003556200012a565b015160001960f88460031b161c191690553880806200052c565b838501518655899790950194938401930162000519565b9091506003600052896000208b80850160051c8201928c8610620005b9575b918791869594930160051c01915b828110620005a9575050620000fe565b6000815585945087910162000599565b925081926200058b565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000ea565b600080fd5b60408051919082016001600160401b03811183821017620004e057604052565b51906001600160a01b0382168203620005e45756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263023a7d7a146107bf5750816306fdde03146106e5578163095ea7b3146106bb57816318160ddd1461069c57816323b872dd1461065f578163313ce5671461064357816339509351146105f35781633fecb087146105b857816340c10f19146103ee57816342966c68146103d057816370a082311461039957816379cc679014610366578163827c049e1461032257816395d89b4114610203578163a457c2d71461015b57508063a9059cbb1461012b5763dd62ed3e146100e057600080fd5b34610127578060031936011261012757806020926100fc610824565b61010461083f565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b503461012757806003193601126101275760209061015461014a610824565b6024359033610878565b5160018152f35b90508234610200578260031936011261020057610176610824565b918360243592338152600160205281812060018060a01b03861682526020522054908282106101af5760208561015485850387336109e6565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b838334610127578160031936011261012757805190828454600181811c90808316928315610318575b6020938484108114610305578388529081156102e95750600114610294575b505050829003601f01601f191682019267ffffffffffffffff841183851017610281575082918261027d9252826107db565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102d5575050505083010185808061024b565b8054888601830152930192849082016102bf565b60ff1916878501525050151560051b840101905085808061024b565b634e487b7160e01b895260228a52602489fd5b91607f169161022c565b505034610127578160031936011261012757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101275736600319011261020057610396610382610824565b60243590610391823383610ae8565b610b80565b80f35b5050346101275760203660031901126101275760209181906001600160a01b036103c1610824565b16815280845220549051908152f35b83903461012757602036600319011261012757610396903533610b80565b919050346105b457806003193601126105b457610409610824565b60243591906001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036105665760055461044d8582610855565b7f000000000000000000000000000000000000000000000000000000000000000010610517578461047d91610855565b600555169283156104d557506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926104bb8795600254610855565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b835162461bcd60e51b81526020818801526024808201527f4d656e746f546f6b656e3a20656d697373696f6e20737570706c7920657863656044820152631959195960e21b6064820152608490fd5b825162461bcd60e51b8152602081870152602260248201527f4d656e746f546f6b656e3a206f6e6c7920656d697373696f6e20636f6e74726160448201526118dd60f21b6064820152608490fd5b8280fd5b505034610127578160031936011261012757602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461012757806003193601126101275761015460209261063c610616610824565b338352600186528483206001600160a01b03821684528652918490205460243590610855565b90336109e6565b5050346101275781600319360112610127576020905160128152f35b50503461012757606036600319011261012757602090610154610680610824565b61068861083f565b60443591610697833383610ae8565b610878565b5050346101275781600319360112610127576020906002549051908152f35b5050346101275780600319360112610127576020906101546106db610824565b60243590336109e6565b83833461012757816003193601126101275780519082600354600181811c908083169283156107b5575b6020938484108114610305578388529081156102e9575060011461075f57505050829003601f01601f191682019267ffffffffffffffff841183851017610281575082918261027d9252826107db565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107a1575050505083010185808061024b565b80548886018301529301928490820161078b565b91607f169161070f565b8490346101275781600319360112610127576020906005548152f35b6020808252825181830181905290939260005b82811061081057505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016107ee565b600435906001600160a01b038216820361083a57565b600080fd5b602435906001600160a01b038216820361083a57565b9190820180921161086257565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156109935716918215610942576000828152806020526040812054918083106108ee57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610a975716918215610a475760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9060018060a01b0380831660005260016020526040600020908216600052602052604060002054926000198403610b20575b50505050565b808410610b3b57610b329303916109e6565b38808080610b1a565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b6001600160a01b03168015610c3857600091818352826020526040832054818110610be857817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fdfea264697066735822122070ff0fc3ead371c55670e84f86078cb70012740cd2b242e37d15ecf1b1aeccfb64736f6c6343000812003345524332303a206d696e7420746f20746865207a65726f206164647265737300a264697066735822122043606fa61c3934b9e17d31c78d52f44edb2f3baf5283d2fc0e85854ce4bc9ec864736f6c63430008120033",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b600090813560e01c639937a6781461002a57600080fd5b307f0000000000000000000000000000000000000000000000000000000000000000146101365760a0366003190112610136576001600160a01b0390600435828116908190036101325760243583811680910361012e5760443584811680910361012a57606435908582168092036101265760843592868416809403610122576112fc948587019587871067ffffffffffffffff88111761010e57918795939160a097959361013b88398552602085015260408401526060830152608082015203019083f0908115610103576020925060405191168152f35b6040513d84823e3d90fd5b634e487b7160e01b8a52604160045260248afd5b8780fd5b8680fd5b8580fd5b8480fd5b8380fd5b5080fdfe60c034620005e4576001600160401b0390601f620012fc38819003828101601f1916840193929185851184861017620004e0578160a09285926040978852833981010312620005e457620000538262000609565b6020906200006382850162000609565b906200007186860162000609565b946200008e6080620000866060840162000609565b920162000609565b9562000099620005e9565b600b81526a26b2b73a37902a37b5b2b760a91b86820152620000ba620005e9565b9960058b52644d454e544f60d81b878c01528151818111620004e0576003546001938482811c92168015620005d9575b8a831014620005c357818b8493116200056c575b5089908b83116001146200050257600092620004f6575b505081841b916000199060031b1c1916176003555b8a51908111620004e05760049a8b548381811c91168015620004d5575b89821014620004c05789811162000475575b5087908983116001146200040d5792829391839260009462000401575b50501b916000199060031b1c19161789555b6001600160a01b03928316938415620003d15760029485546a422ca8b0a00a4250000000908181018091116200038c5791600087969594928998948b9a55828252818a528d82208181540190558d519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9a8b91a3168015620003a15784546a6342fd08f00f6378000000908181018091116200038c578888879594938e6000948b5585855284835280852082815401905551908152a31680156200035c5783546a295be96e6406697200000090818101809111620003475786600092899288558484528382528c84208181540190558c51908152a31693841562000317575080546a52b7d2dcc80cd2e400000091828201809211620003025760009596979850558484528382528684208181540190558651908152a36080526b0219aada9b14535aca00000060a05251610cbd90816200061f82396080518181816103370152610419015260a05181818161044f01526105d00152f35b601189634e487b7160e01b6000525260246000fd5b876064918489519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b60118c634e487b7160e01b6000525260246000fd5b60648a88878c519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b60118d634e487b7160e01b6000525260246000fd5b60648b89888d519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b60648a88888c519262461bcd60e51b84528301526024820152600080516020620012dc8339815191526044820152fd5b01519250388062000176565b90601f198316918d600052838a6000209360005b8c888383106200045d575050501062000443575b505050811b01895562000188565b015160001960f88460031b161c1916905538808062000435565b86860151885590960195948501948793500162000421565b8c600052886000208a80850160051c8201928b8610620004b6575b0160051c019084905b828110620004a957505062000159565b6000815501849062000499565b9250819262000490565b60228d634e487b7160e01b6000525260246000fd5b90607f169062000147565b634e487b7160e01b600052604160045260246000fd5b01519050388062000115565b90859350601f1983169160036000528b6000209260005b8d8282106200055557505084116200053b575b505050811b016003556200012a565b015160001960f88460031b161c191690553880806200052c565b838501518655899790950194938401930162000519565b9091506003600052896000208b80850160051c8201928c8610620005b9575b918791869594930160051c01915b828110620005a9575050620000fe565b6000815585945087910162000599565b925081926200058b565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000ea565b600080fd5b60408051919082016001600160401b03811183821017620004e057604052565b51906001600160a01b0382168203620005e45756fe608060408181526004918236101561001657600080fd5b600092833560e01c918263023a7d7a146107bf5750816306fdde03146106e5578163095ea7b3146106bb57816318160ddd1461069c57816323b872dd1461065f578163313ce5671461064357816339509351146105f35781633fecb087146105b857816340c10f19146103ee57816342966c68146103d057816370a082311461039957816379cc679014610366578163827c049e1461032257816395d89b4114610203578163a457c2d71461015b57508063a9059cbb1461012b5763dd62ed3e146100e057600080fd5b34610127578060031936011261012757806020926100fc610824565b61010461083f565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b503461012757806003193601126101275760209061015461014a610824565b6024359033610878565b5160018152f35b90508234610200578260031936011261020057610176610824565b918360243592338152600160205281812060018060a01b03861682526020522054908282106101af5760208561015485850387336109e6565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b80fd5b838334610127578160031936011261012757805190828454600181811c90808316928315610318575b6020938484108114610305578388529081156102e95750600114610294575b505050829003601f01601f191682019267ffffffffffffffff841183851017610281575082918261027d9252826107db565b0390f35b634e487b7160e01b815260418552602490fd5b8787529192508591837f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8385106102d5575050505083010185808061024b565b8054888601830152930192849082016102bf565b60ff1916878501525050151560051b840101905085808061024b565b634e487b7160e01b895260228a52602489fd5b91607f169161022c565b505034610127578160031936011261012757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5050346101275736600319011261020057610396610382610824565b60243590610391823383610ae8565b610b80565b80f35b5050346101275760203660031901126101275760209181906001600160a01b036103c1610824565b16815280845220549051908152f35b83903461012757602036600319011261012757610396903533610b80565b919050346105b457806003193601126105b457610409610824565b60243591906001600160a01b03907f0000000000000000000000000000000000000000000000000000000000000000821633036105665760055461044d8582610855565b7f000000000000000000000000000000000000000000000000000000000000000010610517578461047d91610855565b600555169283156104d557506020827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926104bb8795600254610855565b60025585855284835280852082815401905551908152a380f35b6020606492519162461bcd60e51b8352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b835162461bcd60e51b81526020818801526024808201527f4d656e746f546f6b656e3a20656d697373696f6e20737570706c7920657863656044820152631959195960e21b6064820152608490fd5b825162461bcd60e51b8152602081870152602260248201527f4d656e746f546f6b656e3a206f6e6c7920656d697373696f6e20636f6e74726160448201526118dd60f21b6064820152608490fd5b8280fd5b505034610127578160031936011261012757602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b50503461012757806003193601126101275761015460209261063c610616610824565b338352600186528483206001600160a01b03821684528652918490205460243590610855565b90336109e6565b5050346101275781600319360112610127576020905160128152f35b50503461012757606036600319011261012757602090610154610680610824565b61068861083f565b60443591610697833383610ae8565b610878565b5050346101275781600319360112610127576020906002549051908152f35b5050346101275780600319360112610127576020906101546106db610824565b60243590336109e6565b83833461012757816003193601126101275780519082600354600181811c908083169283156107b5575b6020938484108114610305578388529081156102e9575060011461075f57505050829003601f01601f191682019267ffffffffffffffff841183851017610281575082918261027d9252826107db565b600387529192508591837fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106107a1575050505083010185808061024b565b80548886018301529301928490820161078b565b91607f169161070f565b8490346101275781600319360112610127576020906005548152f35b6020808252825181830181905290939260005b82811061081057505060409293506000838284010152601f8019910116010190565b8181018601518482016040015285016107ee565b600435906001600160a01b038216820361083a57565b600080fd5b602435906001600160a01b038216820361083a57565b9190820180921161086257565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169182156109935716918215610942576000828152806020526040812054918083106108ee57604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b03908116918215610a975716918215610a475760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b9060018060a01b0380831660005260016020526040600020908216600052602052604060002054926000198403610b20575b50505050565b808410610b3b57610b329303916109e6565b38808080610b1a565b60405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606490fd5b6001600160a01b03168015610c3857600091818352826020526040832054818110610be857817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef926020928587528684520360408620558060025403600255604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fdfea264697066735822122070ff0fc3ead371c55670e84f86078cb70012740cd2b242e37d15ecf1b1aeccfb64736f6c6343000812003345524332303a206d696e7420746f20746865207a65726f206164647265737300a264697066735822122043606fa61c3934b9e17d31c78d52f44edb2f3baf5283d2fc0e85854ce4bc9ec864736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deploy(address,address,address,address,address)": {
        "params": {
          "airgrab": "The address of the airgrab contract",
          "emission": "The address of the emission contract",
          "governanceTimelock": "The address of the governance timelock",
          "mentoLabsMultiSig": "The address of the Mento Labs multisig",
          "mentoLabsTreasuryTimelock": "The address of the timelocked Mento Labs Treasury"
        },
        "returns": {
          "_0": "The address of the new MentoToken contract"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deploy(address,address,address,address,address)": {
        "notice": "Deploys a new MentoToken contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
