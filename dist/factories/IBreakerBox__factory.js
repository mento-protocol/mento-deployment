"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IBreakerBox__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "breaker",
                type: "address",
            },
        ],
        name: "BreakerAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "breaker",
                type: "address",
            },
        ],
        name: "BreakerRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "breaker",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "status",
                type: "bool",
            },
        ],
        name: "BreakerStatusUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "breaker",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
        ],
        name: "BreakerTripped",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
        ],
        name: "RateFeedAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
        ],
        name: "RateFeedRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "breaker",
                type: "address",
            },
        ],
        name: "ResetAttemptCriteriaFail",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "breaker",
                type: "address",
            },
        ],
        name: "ResetAttemptNotCool",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "breaker",
                type: "address",
            },
        ],
        name: "ResetSuccessful",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "newSortedOracles",
                type: "address",
            },
        ],
        name: "SortedOraclesUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "tradingMode",
                type: "uint256",
            },
        ],
        name: "TradingModeUpdated",
        type: "event",
    },
    {
        constant: false,
        inputs: [
            {
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
        ],
        name: "checkAndSetBreakers",
        outputs: [],
        payable: false,
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        constant: true,
        inputs: [],
        name: "getBreakers",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "rateFeedID",
                type: "address",
            },
        ],
        name: "getRateFeedTradingMode",
        outputs: [
            {
                internalType: "uint256",
                name: "tradingMode",
                type: "uint256",
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
    {
        constant: true,
        inputs: [
            {
                internalType: "address",
                name: "breaker",
                type: "address",
            },
        ],
        name: "isBreaker",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        payable: false,
        stateMutability: "view",
        type: "function",
    },
];
var IBreakerBox__factory = /** @class */ (function () {
    function IBreakerBox__factory() {
    }
    IBreakerBox__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IBreakerBox__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IBreakerBox__factory.abi = _abi;
    return IBreakerBox__factory;
}());
exports.IBreakerBox__factory = IBreakerBox__factory;
